name: "[Service] Deploy"

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: environment
        description: Select environment
      service_name:
        type: choice
        required: true
        description: Service name
        options:
          - db
jobs:
  deploy-service:
    runs-on: ubuntu-latest

    environment: ${{ inputs.environment }}

    env:
      SSH_USER: root
      SSH_IP_OR_HOST: ${{ secrets.DIGITAL_OCEAN_DROPLET_IP }}
      SERVICE_NAME: ${{ inputs.service_name }}
      SERVICE_WORKSPACE: /srv/KevBot/$SERVICE_NAME

    steps:
      - name: Echo configuration
        run: |
          echo "GitHub ref: ${{ github.ref }}"
          echo "Environment: ${{ inputs.environment }}"
          echo "Service: ${{ inputs.service_name }}"

      - name: Checkout the selected branch or tag
        uses: actions/checkout@v4

      - name: Decode base64 encoded secrets
        run: |
          echo "DIGITAL_OCEAN_DROPLET_PRIVATE_SSH_KEY<<EOF" >> $GITHUB_ENV
          echo "$(echo '${{ secrets.DIGITAL_OCEAN_DROPLET_PRIVATE_SSH_KEY_64  }}' | base64 --decode)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Start SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ env.DIGITAL_OCEAN_DROPLET_PRIVATE_SSH_KEY }}

      - name: Clean up existing files on DigitalOcean
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP_OR_HOST << EOF
            rm -rf $SERVICE_WORKSPACE
          EOF

      - name: Transfer new files to DigitalOcean
        run: |
          scp -o StrictHostKeyChecking=no -r $GITHUB_WORKSPACE/$SERVICE_NAME $SSH_USER@$SSH_IP_OR_HOST:$SERVICE_WORKSPACE

      - name: Create .env file
        if: ${{ inputs.service_name == 'db' }}
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP_OR_HOST << EOF
            cd $SERVICE_WORKSPACE
            echo "MYSQL_TCP_PORT=${{ secrets.MYSQL_TCP_PORT }}" > .env
            echo "MYSQL_ROOT_USER=${{ secrets.MYSQL_ROOT_USER }}" >> .env
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
            echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          EOF

      - name: Deploy service on DigitalOcean
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP_OR_HOST << EOF
            cd $SERVICE_WORKSPACE
            docker compose --env-file .env up --build -d
          EOF
