name: Deploy Service

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: environment
        description: Select environment
      service_name:
        type: choice
        required: true
        description: Service name
        options:
          - db
jobs:
  deploy-service:
    runs-on: ubuntu-latest

    environment: ${{ inputs.environment }}

    env:
      SSH_USER: root
      SSH_IP_OR_HOST: ${{ secrets.DIGITAL_OCEAN_DROPLET_IP }}
      SERVICE_NAME: ${{ inputs.service_name }}
      SERVICE_WORKSPACE: /srv/KevBot/$SERVICE_NAME

    steps:
      - name: Echo the current ref
        run: |
          echo "Deploying ref: ${{ github.ref }}"
          echo "Deploying env: ${{ inputs.environment }}"
          echo "Deploying service: ${{ inputs.service_name}}"

      - name: Checkout the selected branch or tag
        uses: actions/checkout@v4

      - name: Start SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DIGITAL_OCEAN_DROPLET_PRIVATE_SSH_KEY }}

      - name: Clean up existing files on DigitalOcean
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP_OR_HOST << EOF
            rm -rf $SERVICE_WORKSPACE
          EOF

      - name: Transfer new files to DigitalOcean
        run: |
          scp -o StrictHostKeyChecking=no -r $GITHUB_WORKSPACE/$SERVICE_NAME $SSH_USER@$SSH_IP_OR_HOST:$SERVICE_WORKSPACE

      - name: Deploy service on DigitalOcean
        if: ${{ inputs.service_name == 'db' }}
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP_OR_HOST << EOF
            cd $SERVICE_WORKSPACE
            export MYSQL_TCP_PORT=${{ secrets.MYSQL_TCP_PORT }}
            export MYSQL_ROOT_USER=${{ secrets.MYSQL_ROOT_USER }}
            export MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
            export MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
            docker-compose up --build -d
          EOF
